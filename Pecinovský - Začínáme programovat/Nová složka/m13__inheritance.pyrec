#Příliš žluťoučký kůň úpěl ďábelské ó - PŘÍLIŠ ŽLUŤOUČKÝ KŮŇ ÚPĚL ĎÁBELSKÉ Ó
#Q:/65_PGM/65_REC/m13__inheritance.pyrec
"""
Příkazy a záznamy odpovědí zadávané ve výpisech kapitoly:
13  Dědění
"""



#Výpis 13.1: Definice tříd Matka a Dcera v modulu m13a_MDPV
############################################################################
from utils import prSK

class Matka():
    """Protože třída nedeklaruje explicitně předka,
    je bezprostředním potomkem třídy object.
    """
    cam = 'Třídní atribut matky'

    def __init__(self, argm='M', argm2='', **kwds):
        prSK(1, Matka, f'{argm=}, {argm2=}, {kwds=}')
        super().__init__(**kwds)
        self.iam = f'Instanční atribut matky ({argm})'
        prSK(0, Matka)

    def mtd(self):
        print(f'Instanční metoda třídy Matka\n'
              f'   pro instanci typu {type(self)}.\n'
              f'   {self.cam = }\n   {self.iam = }')


class Dcera(Matka):
    """Třída je bezprostředním potomkem třídy Matka.
    """
    cad = 'Třídní atribut dcery'

    def __init__(self, argd='D', **kwds):
        prSK(1, Dcera, f'{argd=}, {kwds=}')
        super().__init__(argm2='dm', **kwds)
        self.iad = f'Instanční atribut dcery ({argd})'
        prSK(0, Dcera)

    def mtd(self):
        print(f'Instanční metoda třídy Dcera\n'
              f'   pro instanci typu {type(self)}.\n'
              f'   {self.cad = }\n   {self.iad = }\n'
              f'   {self.cam = }\n   {self.iam = }')
        super().mtd()



#Výpis 13.2: Záznam vytvoření instancí tříd Matka a Dcera a volání jejich metod
############################################################################
>>> import m13a_MDPV as mdpv
===== Modul m13a_MDPV ===== START
===== Modul m13a_MDPV ===== STOP
>>> m = mdpv.Matka()
Matka - START - argm='M', argm2='', kwds={}
Matka - KONEC
>>> d = mdpv.Dcera()
Dcera - START - argd='D', kwds={}
   Matka - START - argm='M', argm2='dm', kwds={}
   Matka - KONEC
Dcera - KONEC
>>> m.mtd()
Instanční metoda třídy Matka
   pro instanci typu <class 'm13a_MDPV.Matka'>.
   self.cam = 'Třídní atribut matky'
   self.iam = 'Instanční atribut matky (M)'
>>> d.mtd()
Instanční metoda třídy Dcera
   pro instanci typu <class 'm13a_MDPV.Dcera'>.
   self.cad = 'Třídní atribut dcery'
   self.iad = 'Instanční atribut dcery (D)'
   self.cam = 'Třídní atribut matky'
   self.iam = 'Instanční atribut matky (M)'
Instanční metoda třídy Matka
   pro instanci typu <class 'm13a_MDPV.Dcera'>.
   self.cam = 'Třídní atribut matky'
   self.iam = 'Instanční atribut matky (M)'
>>>



#Výpis 13.3: Definice tříd Přítelkyně a VnučkaDP v modulu m13a_MDPV
############################################################################
class Přítelkyně():
    """Třída je bezprostředním potomkem třídy object.
    """
    def __init__(self, argp='P', **kwds):
        prSK(1, Přítelkyně, f'{argp=}, {kwds=}')
        super().__init__(**kwds)
        self.ipr = 'Instanční atribut přítelkyně'
        prSK(0, Přítelkyně)


class VnučkaDP(Dcera, Přítelkyně):
    """Třída je bezprostředním potomkem tříd Dcera a Přítelkyně.
    """
    def __init__(self, argv='DP', **kwds):
        prSK(1, VnučkaDP, f'{argv=}, {kwds=}')
        super().__init__(**kwds)
        self.iav = f'Instanční atribut první vnučky ({argv})'
        prSK(0, VnučkaDP)



#Výpis 13.4: Záznam vytvoření instance třídy Vnučka a volání její metody
############################################################################
>>> vDP = mdpv.VnučkaDP(argm='vM', argd='vD', argp='vP')
VnučkaDP - START - argv='DP', kwds={'argm': 'vM', 'argd': 'vD', 'argp': 'vP'}
   Dcera - START - argd='vD', kwds={'argm': 'vM', 'argp': 'vP'}
      Matka - START - argm='vM', argm2='dm', kwds={'argp': 'vP'}
         Přítelkyně - START - argp='vP', kwds={}
         Přítelkyně - KONEC
      Matka - KONEC
   Dcera - KONEC
VnučkaDP - KONEC
>>> vPD = mdpv.VnučkaPD(argm='vM', argd='vD', argp='vP')
VnučkaPD - START - argv='PD', kwds={'argm': 'vM', 'argd': 'vD', 'argp': 'vP'}
   Přítelkyně - START - argp='vP', kwds={'argm': 'vM', 'argd': 'vD'}
      Dcera - START - argd='vD', kwds={'argm': 'vM'}
         Matka - START - argm='vM', argm2='dm', kwds={}
         Matka - KONEC
      Dcera - KONEC
   Přítelkyně - KONEC
VnučkaPD – KONEC
>>>



############################################################################
##### KONEC #####
