#Příliš žluťoučký kůň úpěl ďábelské ó - PŘÍLIŠ ŽLUŤOUČKÝ KŮŇ ÚPĚL ĎÁBELSKÉ Ó
#Q:/65_PGM/65_REC/m15__take_put_actions.pyrec
"""
Příkazy a záznamy odpovědí zadávané ve výpisech kapitoly:
15  Příkazy Vezmi a Polož
"""



#Výpis 15.1: Definice abstraktní třídy _AAction v modulu actions v balíčku game_v1e
############################################################################
from abc    import ABCMeta, abstractmethod

class _AAction(world.ANamed, metaclass=ABCMeta):
    """Společná rodičovská třída všech akcí."""

    def __init__(self, name: str, description: str):
        """Zapamatuje si název vytvářené akce a její stručný popis."""
        super().__init__(name)
        self.description = description

    @abstractmethod
    def execute(self, arguments: list[str]) -> str:
        """Realizuje reakci hry na zadání daného příkazu.
        Počet argumentů je závislý na konkrétní akci.
        """



#Výpis 15.2: Definice abstraktní třídy AItemContainer v modulu world v balíčku game_v1e
############################################################################
class AItemContainer(metaclass=ABCMeta):
    """Společný rodič tříd, jejichž instance mohou obsahovat h-objekty."""

    def __init__(self, initial_item_names: tuple[str], **kwds):
        """Rodič si zapamatuje název vytvářeného kontejneru a uloží názvy
        výchozí sady obsažených objektů v kontejneru pro inicializaci.
        """
        super().__init__(**kwds)
        # Počáteční názvy se ukládají včetně prefixů, aby se při
        # inicializaci daly použít jako argumenty initoru
        self.initial_item_names = tuple(initial_item_names)

    def initialize(self) -> None:
        """Připraví počáteční obsah kontejneru na počátku hry tak,
        že vytvoří a zapamatuje si objekty zadaných počátečních názvů.
        """
        # Následující dva atributy se vytvářejí až při první inicializaci
        self.items      = [Item(name) for name in self.initial_item_names]
        # Názvy se ukládají bez prefixů a převedené na malá písmena
        self.item_names = [item.name.lower() for item in self.items]

    def add_item(self, item: Item) -> None:
        """Přidá zadanou položku do seznamu a její název převedený
        na malá písmena uloží do seznamu názvů.
        """
        # Obě se uloží na konec seznamu, takže budou mít shodný index
        self.item_names.append(item.name.lower())
        self.items     .append(item)

    def remove_item(self, item_name: str) -> Item:
        """Vyjme položku se zadaným názvem ze seznamu položek a vrátí ji
        jako svoji funkční hodnotu. Není-li položka v seznamu, vrátí None.
        Při rozpoznávání názvů nesmí záležet na velikosti písmen.
        """
        try:
            # Zapamatované názvy jsou malými písmeny => musím převést zadaný
            index = self.item_names.index(item_name.lower())
        except ValueError:
            return None
        # Název i odpovídající objekt mají v seznamech shodné indexy
        self.item_names.pop(index)
        result = self.items.pop(index)
        return result



#Výpis 15.3: Upravené definice initoru třídy ANamed v modulu world v balíčku game_v1e
############################################################################
    def __init__(self, name, **kwds):
        """Zapamatuje si jméno dané instance."""
        super().__init__(**kwds)
        self.name = name



#Výpis 15.4: Upravené definice tříd Place a Bag v modulu world v balíčku game_v1e
############################################################################
class Place(ANamed, AItemContainer):
    """Instance reprezentují prostory hry."""

    def __init__(self, name: str, description: str,
                 initial_neighbor_names: tuple[str],
                 initial_item_names:     tuple[str]):
        """Vytvoří prostor se zadaným názvem a stručným popisem napojený
        zpočátku na zadané sousedy a obsahující zadané h-objekty."""
        super().__init__(name=name, initial_item_names=initial_item_names)
        self.description            = description
        self.initial_neighbor_names = initial_neighbor_names
        self.name_2_neighbor        = dict.fromkeys(initial_neighbor_names)


class Bag(AItemContainer):
    """Instance třídy reprezentuje batoh."""

    CAPACITY = 2    # Maximální kapacita batohu

    def __init__(self):
        """Vytvoří batoh."""
        super().__init__(())



#Výpis 15.5: Definice třídy Take v modulu actions v balíčku game_v1e
############################################################################
class _Take(_AAction):
    """Přesune h-objekt z aktuálního prostoru do košíku.
    """
    def __init__(self):
        super().__init__("Vezmi",
                "Přesune zadaný předmět z aktuálního prostoru do košíku.")

    def execute(self, arguments: list[str]) -> str:
        """Ověří existenci zadaného h-objektu v aktuálním prostoru
        a je-li tam, přesune jej do košíku.
        """
        item_name = arguments[1]
        item      = world.current_place.remove_item(item_name)
        if not item:
            return 'Zadaný předmět v prostoru není: ' + item_name
        world.BAG.add_item(item)
        return 'Karkulka dala do košíku objekt: ' + item.name



#Výpis 15.6: Definice třídy _Put v modulu actions v balíčku game_v1e
############################################################################
class _Put(_AAction):
    """Přesune h-objekt z košíku do aktuálního prostoru.
    """
    def __init__(self):
        super().__init__('Polož',
                'Přesune zadaný předmět z košíku do aktuálního prostoru.')

    def execute(self, arguments: list[str]) -> str:
        """Ověří existenci zadaného h-objektu v košíku a je-li tam,
        vyjme jej z košíku a přesune do aktuálního prostoru.
        """
        item_name = arguments[1]
        item      = world.BAG.remove_item(item_name)
        if item:
            world.current_place.add_item(item)
            return 'Karkulka vyndala z košíku objekt: ' + item.name
        else:
            return 'Zadaný předmět v košíku není: ' + item_name



#Výpis 15.7: Upravená definice metody initialize() v modulu world v balíčku game_v1e
############################################################################
def initialize() -> None:
    """Inicializuje batoh a prostory."""
    for p in _NAME_2_PLACE.values():
        p.initialize()
    BAG.initialize()



#Výpis 15.8: Konec zprávy o průběhu testu aplikace v balíčku game_v1e
############################################################################
=============================== RESTART: Shell ==============================
>>> import game.game_v1e.scenarios
##### game - Společný rodičovský balíček balíčků jednotlivých verzí her
##### game.game_v1e - Balíček s verzí hry na konci 15. kapitoly
      po definici příkazů Vezmi a Polož
===== Modul game.game_v1e.scenarios ===== START
===== Modul game.game_v1e.world ===== START
===== Modul game.game_v1e.world ===== STOP
===== Modul game.game_v1e.game ===== START
===== Modul game.game_v1e.actions ===== START
===== Modul game.game_v1e.actions ===== STOP
===== Modul game.game_v1e.game ===== STOP
===== Modul game.game_v1e.scenarios ===== STOP
Spuštěna metoda game.game_v1e.game.game_v1e.scenarios.test_scenario
0.
------------------------------

------------------------------
Vítejte!
Toto je příběh o Červené Karkulce, babičce a vlkovi.
Svými příkazy řídíte Karkulku, aby donesla věci babičce.
Nebudete-li si vědět rady, zadejte znak ?.
============================================================

1.
------------------------------
Vezmi víno
------------------------------
Karkulka dala do košíku objekt: Víno
============================================================

2.
------------------------------
Vezmi bábovka
------------------------------
Karkulka dala do košíku objekt: Bábovka
============================================================

3.
------------------------------
Jdi LES
------------------------------
Tento příkaz neznám: jdi
============================================================

V 3. kroku neodpovídá: odpověď hry
   Očekáváno: Karkulka se přesunula do prostoru:
Les s jahodami, malinami a pramenem vody
   Obdrženo:  Tento příkaz neznám: jdi
Stisk klávesy Enter aplikaci ukončí
>>>



############################################################################
##### KONEC #####
